#!/usr/bin/env ruby
require 'pathname'
require 'shellwords'
require 'dotenv'
require 'tempfile'

Dotenv.load ".env.test"

arg = ARGV[0]

arg = Pathname(arg).expand_path if arg

opts = []
resty = Pathname('script/resty').expand_path.to_s

busted = Pathname('script/spec.lua').expand_path.to_s

osx_luarocks = Pathname('/usr/local/Cellar/luarocks/2.1.2/share/lua/5.1/')
opts << '-I' << osx_luarocks.to_s if  osx_luarocks.exist?

loader = Tempfile.new('busted')
Dir.chdir('lua') do
  args = ["'--verbose'"]
  if arg
    arg = arg.relative_path_from(Pathname.pwd)
    args << "'#{arg.to_s.shellescape}'"
  end
  loader.puts <<-end
local busted = io.popen('which busted', 'r'):read()
local busted_lua = io.open(busted, 'r'):read('*a'):match([[([^'"]+/bin/busted)]])

require "luarocks.loader"

assert = require "luassert"
spy    = require "luassert.spy"
mock   = require "luassert.mock"
stub   = require "luassert.stub"

inspect = require "inspect"
pinspect = function(x) print(inspect(x)) end
_TEST = true

arg = { #{args.compact.join(',')} }

loadfile(busted_lua)()
  end
  loader.close
  cmd = [
    "eval $(luarocks path)",
    "#{resty.shellescape} #{opts.map(&:shellescape).join(' ')} #{loader.path.shellescape}"
  ].join(' && ')
  puts cmd
  exec(cmd)
end
